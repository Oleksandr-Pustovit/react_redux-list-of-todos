{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/loading.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todoId","type","payload","currentTodoReducer","state","action","querry","status","initialState","query","ALL","filterReducer","loadingReducer","loading","pageLoading","modalLoading","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","getVisibleTodos","todo","title","toLowerCase","includes","ACTIVE","completed","COMPLETED","visibleTodos","length","className","map","id","onClick","dispatch","currentTodoActions","classnames","TodoFilter","onSubmit","event","preventDefault","onChange","filterActions","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","currentTodoId","find","isLoading","useState","user","setUser","Error","useEffect","userId","loadingActions","catch","error","href","email","name","App","setTodos","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16234c02.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","type RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: number;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todoId: number): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todoId,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: number | null = null,\n  action: Action,\n): number | null => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetFilterQuery = { type: 'filter/query/SET', payload: string };\ntype SetFilterStatus = { type: 'filter/status/SET', payload: Status };\n\nconst setFilterQuerry = (querry: string): SetFilterQuery => ({\n  type: 'filter/query/SET',\n  payload: querry,\n});\n\nconst setFilterStatus = (status: Status): SetFilterStatus => ({\n  type: 'filter/status/SET',\n  payload: status,\n});\n\nexport const actions = { setFilterQuerry, setFilterStatus };\n\nconst initialState: State = {\n  query: '',\n  status: Status.ALL,\n};\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\ntype Action = SetFilterQuery | SetFilterStatus;\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/query/SET':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/status/SET':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","type SetPageIsLoading = {\n  type: 'loading/Page/SETTRUE'\n};\n\ntype SetPageIsNOTLoading = {\n  type: 'loading/Page/SETFALSE'\n};\n\ntype SetModalIsLoading = {\n  type: 'loading/Modal/SETTRUE'\n};\n\ntype SetModalIsNOTLoading = {\n  type: 'loading/Modal/SETFALSE'\n};\n\nconst setModalIsLoading = (): SetModalIsLoading => ({\n  type: 'loading/Modal/SETTRUE',\n});\n\nconst setModalIsNOTLoading = (): SetModalIsNOTLoading => ({\n  type: 'loading/Modal/SETFALSE',\n});\n\nconst setPageIsLoading = (): SetPageIsLoading => ({\n  type: 'loading/Page/SETTRUE',\n});\n\nconst setPageIsNOTLoading = (): SetPageIsNOTLoading => ({\n  type: 'loading/Page/SETFALSE',\n});\n\nexport const actions = {\n  setModalIsLoading,\n  setModalIsNOTLoading,\n  setPageIsLoading,\n  setPageIsNOTLoading,\n};\n\nexport const getModalLoading = (loading: State) => {\n  return loading.modalLoading;\n};\n\nexport const getPageLoading = (loading: State) => {\n  return loading.pageLoading;\n};\n\ntype State = {\n  pageLoading: boolean,\n  modalLoading: boolean,\n};\n\ntype Action = SetModalIsLoading | SetModalIsNOTLoading\n| SetPageIsLoading | SetPageIsNOTLoading;\n\nconst loadingReducer = (\n  loading: State = { pageLoading: true, modalLoading: true },\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'loading/Modal/SETTRUE':\n      return {\n        ...loading,\n        modalLoading: true,\n      };\n\n    case 'loading/Modal/SETFALSE':\n      return {\n        ...loading,\n        modalLoading: false,\n      };\n\n    case 'loading/Page/SETTRUE':\n      return {\n        ...loading,\n        pageLoading: true,\n      };\n\n    case 'loading/Page/SETFALSE':\n      return {\n        ...loading,\n        pageLoading: false,\n      };\n\n    default:\n      return loading;\n  }\n};\n\nexport default loadingReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodos => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[];\ntype Action = SetTodos;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport loadingReducer from '../features/loading';\n// eslint-disable-next-line import/no-named-as-default\nimport todosReducer from '../features/todos';\n\nexport const getFilter = (state: RootState) => {\n  return state.filter;\n};\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n  loading: loadingReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classnames from 'classnames';\nimport React from 'react';\nimport { store } from '../../app/store';\nimport { Status } from '../../types/Status';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n\n  const getVisibleTodos = () => {\n    return todos\n      .filter(todo => {\n        return todo.title.toLowerCase().includes(filter.query.toLowerCase());\n      })\n      .filter(todo => {\n        switch (filter.status) {\n          case Status.ACTIVE:\n            return !todo.completed;\n\n          case Status.COMPLETED:\n            return todo.completed;\n\n          default:\n            return true;\n        }\n      });\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  return (\n    <>\n      {visibleTodos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {getVisibleTodos().map(todo => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      store.dispatch(currentTodoActions.setTodo(todo.id));\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className={classnames('far', {\n                        'fa-eye-slash': todo.id === currentTodo,\n                        'fa-eye': todo.id !== currentTodo,\n                      })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n            {/* {\n            // #region\n          }\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">delectus aut autem</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">2</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"has-background-info-light\">\n            <td className=\"is-vcentered\">3</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">fugiat veniam minus</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">4</td>\n            <td className=\"is-vcentered\"><span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span></td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">et porro tempora</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">5</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">laboriosam mollitia et enim quasi adipisci quia provident illum</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">6</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">qui ullam ratione quibusdam voluptatem quia omnis</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">7</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">illo expedita consequatur quia in</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">8</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">9</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">molestiae perspiciatis ipsa</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">10</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">illo est ratione doloremque quia maiores aut</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n          {\n            // #endregion\n          } */}\n          </tbody>\n        </table>\n      )}\n\n    </>\n  );\n};\n","import React from 'react';\nimport { store } from '../../app/store';\nimport { Status } from '../../types/Status';\n\nimport { actions as filterActions } from '../../features/filter';\nimport { useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter: React.FC = () => {\n  const query = useAppSelector(state => state.filter.query);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              store.dispatch(filterActions\n                .setFilterStatus(event.target.value as Status));\n            }}\n          >\n            <option value={Status.ALL}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            store.dispatch(filterActions.setFilterQuerry(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0 && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  store.dispatch(filterActions.setFilterQuerry(''));\n                }}\n              />\n            </>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { store } from '../../app/store';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { actions as loadingActions } from '../../features/loading';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodoId = useAppSelector(state => state.currentTodo);\n  const currentTodo = useAppSelector(state => state.todos\n    .find(todo => todo.id === currentTodoId));\n  const isLoading = useAppSelector(state => state.loading.modalLoading);\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!currentTodo) {\n    throw new Error();\n  }\n\n  useEffect(() => {\n    try {\n      getUser(currentTodo.userId)\n        .then(res => {\n          setUser(res);\n          store.dispatch(loadingActions.setModalIsNOTLoading());\n        })\n        .catch(() => {\n          throw new Error('No such user');\n        });\n    } catch (error) {\n      store.dispatch(currentTodoActions.removeTodo());\n    }\n\n    return () => {\n      store.dispatch(loadingActions.setModalIsLoading());\n    };\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                store.dispatch(currentTodoActions.removeTodo());\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { store } from './app/store';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\nimport { actions as loadingActions } from './features/loading';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { pageLoading } = useAppSelector(state => state.loading);\n  const { setTodos } = todosActions;\n\n  useEffect(() => {\n    getTodos()\n      .then(res => {\n        store.dispatch(setTodos(res));\n        store.dispatch(loadingActions.setPageIsNOTLoading());\n      })\n      .catch(() => {\n        throw new Error();\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {pageLoading ? (\n                <Loader />\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}